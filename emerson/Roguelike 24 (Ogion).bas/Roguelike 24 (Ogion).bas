10  GOSUB 900
20  IF HP <  =  - 10 THEN  WIDTH 255: POKE 357,0: POKE 358,130: END 
30  POKE MAP + LOC + 20 - 1,CJ
40  PRINT MAP$
50  INPUT CMD$
60  POKE MAP + LOC + 20 - 1,CE
70 I1$ = INV$:I2$ = CMD$: GOSUB 200: IF I THEN EQP$ = CMD$: PRINT  RIGHT$ (INV$,7)
80 I1$ = "NSEWT":I2$ = CMD$: GOSUB 200:DST = LOC + DST(I): IF DST > LM - 20 THEN DST = LM - 20
90  IF DST <  - 19 THEN DST =  - 19
100 C =  PEEK (MAP + DST + 20 - 1): IF C >  = CA GOTO 140
110  IF C = CX THEN  POKE MAP + DST + 20 - 1, ASC ( MID$ (" A B C D F G H I K L M N O R S T U V W Z ? ! # $ * % ' ( ) + , - . / ; < >", RND (1) * 74 + 1,1)): GOTO 20
120  IF C <  > CP THEN LOC = DST: IF C <  > CE THEN INV$ = INV$ +  CHR$ (C)
130  GOTO 20
140 I1$ = ",-?;<>%/":I2$ = EQP$: GOSUB 200:ATK =  INT ( RND (1) * 10) + I
150 I1$ = INV$:I2$ =  MID$ ("ABC/E,,HIJK-'NOPQ',T,+.XY?",C - 64,1): GOSUB 200: IF I THEN ATK = ATK + 10
160  IF ATK < C - 64 THEN HP = HP - 1: PRINT "HP =";(HP + 10): GOTO 20
170  IF C = CZ THEN  PRINT "YOU WIN!"
180  POKE MAP + DST + 20 - 1, ASC ( MID$ (" % ' ( ) + , - . / ; < > ?      ", RND (1) * 32 + 1,1)): GOTO 20
200  REM I=INSTR$(I1$,I2$)
210  IF I1$ = "" OR  LEN (I1$) <  LEN (I2$) THEN I = 0: RETURN 
220  FOR I = 1 TO  LEN (I1$) -  LEN (I2$): IF  MID$ (I1$,I, LEN (I2$)) = I2$ THEN  RETURN 
230  NEXT I:I = 0: RETURN 
900  REM INICIALIZA
910  TEXT : HOME : PRINT : WIDTH 8: POKE 357,0: POKE 358,129: REM LIMITA A TELA A 8X8 CARACTERES
920 MAP$ = "#::::::##::::::##::::::##::::::##::::::##::::::#": REM IMPORTANTE! MAP$ DEVE SER A PRIMEIRA VARIAVEL DECLARADA NO PROGRAMA.
930 I =  PEEK (951) + 256 *  PEEK (952):MAP =  PEEK (I + 4) + 256 *  PEEK (I + 5): REM MAP APONTA PARA O PRIMEIRO BYTE DE MAP$,QUE SERA MODIFICADO COM POKES.
940 LM =  LEN (MAP$)
950 CJ = 64:CP =  ASC ("#"):CX =  ASC (":"):CE =  ASC (" "):CA =  ASC ("A"):CZ =  ASC ("Z")
960  FOR I = 0 TO LM - 1: POKE MAP + I, ASC ( MID$ ("#::::::#",(I AND 7) + 1,1)): NEXT I
970  DIM DST(5):DST(0) = 0:DST(1) =  - 8:DST(2) = 8:DST(3) = 1:DST(4) =  - 1:DST(5) = 12
980 LOC = 0:HP = 0:INV$ = ""
990 I =  RND ( - ( PEEK (263) +  PEEK (264) * 256)): REM RANDOMIZE
999  RETURN 
65528  REM "ROGUELIKE 24"
65529  REM JOGO ORIGINAL PARA APLICATIVO LOWRES CODER POR
65530  REM OGION
65531  REM DISPONIVEL EM
65532  REM HTTP://LOWRES.INUTILIS.COM/PROGRAMS/?LCCPOST=CRX2M6KJNV
65533  REM VERSAO PARA MC-1000 POR
65534  REM EMERSON JOSE SILVEIRA DA COSTA (ENSJO)
65535  REM 2018-08-16
