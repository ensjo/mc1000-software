ycord:  equ $0115
xcord:  equ ycord+1
yxcord: equ ycord
invers: equ $0352
ramtop: equ $3fff
vram:   equ $8000
vramof: equ $c879
vramon: equ $c886
alen:   equ $e8a1

        org $3cb0 ; ramtop-8*96+1-80

inicio:
; Desempilha string. Retorna se "".
        call alen
        ret z
; B = tamanho da string.
        ld b,a
; HL = endereço da string.
        inc hl
        inc hl
        ld c,(hl)
        inc hl
        ld h,(hl)
        ld l,c
; DE = posição de escrita na VRAM:
; VRAM + y * 8 * 32 + x.
        push hl
        ld hl,yxcord
        ld d,(hl)
        inc hl
        ld e,(hl)
        ld hl,vram
        add hl,de
        ex de,hl
        pop hl
; Habilita VRAM para escrita.
        call vramon
; Para cada caracter da string…
loop1:
        ld a,(hl)
; Ignora caracteres de controle (ASCII < 32).
        sub 32
        jr c,nxtchr
; Salva dados do laço externo.
        push hl
        push de
        push bc
; Calcula posição na tabela de caracteres:
; CHRTBL + a * 8.
        ld h,0
        ld l,a
        add hl,hl
        add hl,hl
        add hl,hl
        ld bc,chrtbl
        add hl,bc
; C = $00 (NORMAL) ou $FF (INVERSE).
        ld a,(invers)
        sub 1
        sbc a,a
        cpl
        ld c,a
; Transfere os 8 bytes do caracter para a VRAM.
        ld b,8
loop2:
        ld a,(hl)
        xor c ; NORMAL/INVERSE
        ld (de),a
        inc hl
        ld a,e
        add a,32
        ld e,a
        ld a,d
        adc a,0
        ld d,a
        djnz loop2
; Restaura dados do laço externo.
        pop bc
        pop de
        pop hl
; Avança posição de escrita na VRAM.
        inc de
; Avança para o próximo caracter.
nxtchr:
        inc hl
        djnz loop1
; Desabilita VRAM e retorna.
        jp vramof

        org $3d00 ; ramtop-8*96+1

; Tabela de caracteres.
chrtbl: db $00,$00,$00,$00,$00,$00,$00,$00 ; espaço
        db $10,$10,$10,$10,$10,$00,$10,$00 ; !
        db $28,$28,$28,$00,$00,$00,$00,$00 ; "
        db $28,$28,$7c,$28,$7c,$28,$28,$00 ; #
        db $10,$3c,$50,$38,$14,$78,$10,$00 ; $
        db $60,$64,$08,$10,$20,$4c,$0c,$00 ; %
        db $20,$50,$50,$20,$54,$48,$34,$00 ; &
        db $10,$10,$10,$00,$00,$00,$00,$00 ; '
        db $08,$10,$20,$20,$20,$10,$08,$00 ; (
        db $20,$10,$08,$08,$08,$10,$20,$00 ; )
        db $10,$54,$38,$10,$38,$54,$10,$00 ; *
        db $00,$10,$10,$7c,$10,$10,$00,$00 ; +
        db $00,$00,$00,$00,$10,$10,$20,$00 ; ,
        db $00,$00,$00,$7c,$00,$00,$00,$00 ; -
        db $00,$00,$00,$00,$00,$00,$10,$00 ; .
        db $00,$04,$08,$10,$20,$40,$00,$00 ; /
        db $38,$44,$4c,$54,$64,$44,$38,$00 ; 0
        db $10,$30,$10,$10,$10,$10,$38,$00 ; 1
        db $38,$44,$04,$18,$20,$40,$7c,$00 ; 2
        db $7c,$04,$08,$18,$04,$44,$38,$00 ; 3
        db $08,$18,$28,$48,$7c,$08,$08,$00 ; 4
        db $7c,$40,$78,$04,$04,$44,$38,$00 ; 5
        db $1c,$20,$40,$78,$44,$44,$38,$00 ; 6
        db $7c,$04,$08,$10,$20,$20,$20,$00 ; 7
        db $38,$44,$44,$38,$44,$44,$38,$00 ; 8
        db $38,$44,$44,$3c,$04,$08,$70,$00 ; 9
        db $00,$00,$10,$00,$10,$00,$00,$00 ; :
        db $00,$00,$10,$00,$10,$10,$20,$00 ; ;
        db $08,$10,$20,$40,$20,$10,$08,$00 ; <
        db $00,$00,$7c,$00,$7c,$00,$00,$00 ; =
        db $20,$10,$08,$04,$08,$10,$20,$00 ; >
        db $38,$44,$08,$10,$10,$00,$10,$00 ; ?
        db $38,$44,$54,$5c,$58,$40,$3c,$00 ; @
        db $10,$28,$44,$44,$7c,$44,$44,$00 ; A
        db $78,$44,$44,$78,$44,$44,$78,$00 ; B
        db $38,$44,$40,$40,$40,$44,$38,$00 ; C
        db $78,$44,$44,$44,$44,$44,$78,$00 ; D
        db $7c,$40,$40,$78,$40,$40,$7c,$00 ; E
        db $7c,$40,$40,$78,$40,$40,$40,$00 ; F
        db $3c,$40,$40,$40,$4c,$44,$3c,$00 ; G
        db $44,$44,$44,$7c,$44,$44,$44,$00 ; H
        db $38,$10,$10,$10,$10,$10,$38,$00 ; I
        db $04,$04,$04,$04,$04,$44,$38,$00 ; J
        db $44,$48,$50,$60,$50,$48,$44,$00 ; K
        db $40,$40,$40,$40,$40,$40,$7c,$00 ; L
        db $44,$6c,$54,$54,$44,$44,$44,$00 ; M
        db $44,$44,$64,$54,$4c,$44,$44,$00 ; N
        db $38,$44,$44,$44,$44,$44,$38,$00 ; O
        db $78,$44,$44,$78,$40,$40,$40,$00 ; P
        db $38,$44,$44,$44,$54,$48,$34,$00 ; Q
        db $78,$44,$44,$78,$50,$48,$44,$00 ; R
        db $38,$44,$40,$38,$04,$44,$38,$00 ; S
        db $7c,$10,$10,$10,$10,$10,$10,$00 ; T
        db $44,$44,$44,$44,$44,$44,$38,$00 ; U
        db $44,$44,$44,$44,$44,$28,$10,$00 ; V
        db $44,$44,$44,$54,$54,$6c,$44,$00 ; W
        db $44,$44,$28,$10,$28,$44,$44,$00 ; X
        db $44,$44,$28,$10,$10,$10,$10,$00 ; Y
        db $7c,$04,$08,$10,$20,$40,$7c,$00 ; Z
        db $7c,$60,$60,$60,$60,$60,$7c,$00 ; [
        db $00,$40,$20,$10,$08,$04,$00,$00 ; \
        db $7c,$0c,$0c,$0c,$0c,$0c,$7c,$00 ; ]
        db $00,$00,$10,$28,$44,$00,$00,$00 ; ^
        db $00,$00,$00,$00,$00,$00,$00,$7f ; _
        db $20,$10,$08,$00,$00,$00,$00,$00 ; `
        db $00,$00,$38,$04,$3c,$44,$3c,$00 ; a
        db $40,$40,$78,$44,$44,$44,$78,$00 ; b
        db $00,$00,$3c,$40,$40,$40,$3c,$00 ; c
        db $04,$04,$3c,$44,$44,$44,$3c,$00 ; d
        db $00,$00,$38,$44,$7c,$40,$3c,$00 ; e
        db $18,$24,$20,$78,$20,$20,$20,$00 ; f
        db $00,$00,$38,$44,$44,$3c,$04,$38 ; g
        db $40,$40,$78,$44,$44,$44,$44,$00 ; h
        db $10,$00,$30,$10,$10,$10,$38,$00 ; i
        db $08,$00,$18,$08,$08,$08,$48,$30 ; j
        db $40,$40,$44,$48,$70,$48,$44,$00 ; k
        db $30,$10,$10,$10,$10,$10,$38,$00 ; l
        db $00,$00,$6c,$54,$54,$54,$44,$00 ; m
        db $00,$00,$78,$44,$44,$44,$44,$00 ; n
        db $00,$00,$38,$44,$44,$44,$38,$00 ; o
        db $00,$00,$78,$44,$44,$78,$40,$40 ; p
        db $00,$00,$3c,$44,$44,$3c,$04,$04 ; q
        db $00,$00,$5c,$60,$40,$40,$40,$00 ; r
        db $00,$00,$3c,$40,$38,$04,$78,$00 ; s
        db $20,$20,$78,$20,$20,$24,$18,$00 ; t
        db $00,$00,$44,$44,$44,$4c,$34,$00 ; u
        db $00,$00,$44,$48,$28,$30,$10,$00 ; v
        db $00,$00,$44,$44,$54,$54,$6c,$00 ; w
        db $00,$00,$44,$28,$10,$28,$44,$00 ; x
        db $00,$00,$44,$48,$28,$30,$10,$60 ; y
        db $00,$00,$7c,$08,$10,$20,$7c,$00 ; z
        db $1c,$30,$30,$60,$30,$30,$1c,$00 ; {
        db $10,$10,$10,$00,$10,$10,$10,$00 ; |
        db $70,$18,$18,$0c,$18,$18,$70,$00 ; }
        db $2c,$50,$00,$00,$00,$00,$00,$00 ; ~
        db $00,$10,$24,$48,$10,$24,$48,$00 ; DEL