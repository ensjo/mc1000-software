10  HGR :WS$ =  CHR$ (26): GOSUB 65204
20  FOR I = 32 TO 95:WS$ =  CHR$ (I): GOSUB 65204: NEXT I
30  GOSUB 65202
40  INVERSE :WS$ = "<<< INVERSE! >>>": GOSUB 65200: NORMAL
9999  END
65200  REM PRINT WS$ (CR+LF)
65201  GOSUB 65204
65202  REM PRINT (CR+LF)
65203  POKE 276,0: POKE 275, PEEK (275) + 1: RETURN
65204  REM PRINT WS$;
65205  IF WS$ = "" THEN  RETURN
65206  FOR WS = 1 TO  LEN (WS$)
65207  IF  PEEK (276) > 63 THEN  POKE 276,0: POKE 275, PEEK (275) + 1: IF  PEEK (275) > 23 THEN  POKE 275,0
65208 WC =  ASC ( MID$ (WS$,WS,1)): IF WC < 32 THEN 65214
65209 WC = WC AND 127: IF WC > 95 THEN WC = WC - 64
65210  GOSUB 65300
65211  POKE 276, PEEK (276) + 1
65212  NEXT WS
65213  RETURN
65214  REM CARACTERES DE CONTROLE
65215  IF WC = 7 THEN  CALL 49248: GOTO 65212
65216  IF WC = 8 THEN  POKE 275, PEEK (275) - ( SGN ( PEEK (275)) AND  PEEK (276) = 0): POKE 276,( PEEK (276) - 1) AND 63: GOTO 65212
65217  IF WC = 10 THEN  POKE 275, PEEK (275) + 1: GOTO 65212
65218  IF WC = 11 THEN  POKE 275, PEEK (275) -  SGN ( PEEK (275)): GOTO 65212
65219  IF WC = 12 THEN 65211
65220  IF WC = 13 THEN  POKE 276,0: GOTO 65212
65221  IF WC = 26 THEN  HGR :WC = 30
65222  IF WC = 30 THEN  POKE 275,0: POKE 276,0: GOTO 65212
65223 WC = WC + 64: GOTO 65210
65300  REM PRINT CHR$(WC);
65312  RESTORE 65400
65313  FOR WI = 0 TO WC - 32: READ WC$: NEXT WI
65314  OUT 128, PEEK (245) AND 254
65315 WR = 32768 +  PEEK (275) * 256 +  INT ( PEEK (276) / 2)
65316  FOR WI = 1 TO 8
65317 WN$ =  MID$ (WC$,WI,1): IF WN$ = "" THEN WN = 0: GOTO 65320
65318  IF WN$ > "9" THEN WN =  ASC (WN$) - 55: GOTO 65320
65319 WN =  VAL (WN$)
65320  IF  PEEK (850) THEN WN = ( NOT WN) AND 15: REM INVERSE
65321 WE = WR + (WI - 1) * 32
65322  IF  PEEK (276) AND 1 THEN  POKE WE, PEEK (WE) AND 240 OR WN: GOTO 65324
65323  POKE WE, PEEK (WE) AND 15 OR (WN * 16)
65324  NEXT WI
65325  OUT 128, PEEK (245)
65326  RETURN
65400  REM DADOS DOS CARACTERES
65432  DATA "": REM (ESPACO)
65433  DATA "044404": REM !
65434  DATA "0AA": REM "
65435  DATA "06F6F6": REM #
65436  DATA "46842C4": REM $
65437  DATA "082482": REM %
65438  DATA "04A5A5": REM &
65439  DATA "044": REM '
65440  DATA "024442": REM (
65441  DATA "084448": REM )
65442  DATA "00A4A": REM *
65443  DATA "004E4": REM +
65444  DATA "0000448": REM ,
65445  DATA "000E": REM -
65446  DATA "000004": REM .
65447  DATA "00248": REM /
65448  DATA "04AAA4": REM 0
65449  DATA "04C44E": REM 1
65450  DATA "0C248E": REM 2
65451  DATA "0C242C": REM 3
65452  DATA "0AAE22": REM 4
65453  DATA "0E8C2C": REM 5
65454  DATA "068CA4": REM 6
65455  DATA "0E2444": REM 7
65456  DATA "04A4A4": REM 8
65457  DATA "04A62C": REM 9
65458  DATA "00404": REM :
65459  DATA "0040448": REM ;
65460  DATA "024842": REM <
65461  DATA "00E0E": REM =
65462  DATA "084248": REM >
65463  DATA "0C2404": REM ?
65464  DATA "069B86": REM @
65465  DATA "04AEAA": REM A
65466  DATA "0CACAC": REM B
65467  DATA "068886": REM C
65468  DATA "0CAAAC": REM D
65469  DATA "0E8C8E": REM E
65470  DATA "0E8C88": REM F
65471  DATA "068AA6": REM G
65472  DATA "0AAEAA": REM H
65473  DATA "0E444E": REM I
65474  DATA "02222C": REM J
65475  DATA "0AACAA": REM K
65476  DATA "08888E": REM L
65477  DATA "0EEAAA": REM M
65478  DATA "0CAAAA": REM N
65479  DATA "04AAA4": REM O
65480  DATA "0CAC88": REM P
65481  DATA "04AAA42": REM Q
65482  DATA "0CACAA": REM R
65483  DATA "06842C": REM S
65484  DATA "0E4444": REM T
65485  DATA "0AAAAE": REM U
65486  DATA "0AAAA4": REM V
65487  DATA "0AAAEE": REM W
65488  DATA "0AA4AA": REM X
65489  DATA "0AA444": REM Y
65490  DATA "0E248E": REM Z
65491  DATA "064446": REM [
65492  DATA "00842": REM \
65493  DATA "0C444C": REM ]
65494  DATA "04A": REM ^
65495  DATA "000000F": REM _
65535  DATA "*"
